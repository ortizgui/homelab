# Restic Backup Configuration
# Copy this file to .env and fill in your actual values
# NEVER commit the actual .env file with real credentials!

# =============================================================================
# REQUIRED: Restic Configuration
# =============================================================================

# Restic repository password (REQUIRED)
# Use a strong, unique password. If you lose this, your backups are unrecoverable!
# Example: openssl rand -base64 32
RESTIC_PASSWORD=your-very-secure-password-here

# Restic repository location using rclone backend (REQUIRED)
# Format: rclone:<remote-name>:<path>
# Examples:
#   RESTIC_REPOSITORY=rclone:gdrive:/backups/restic
#   RESTIC_REPOSITORY=rclone:onedrive:/backups/restic
RESTIC_REPOSITORY=rclone:gdrive:/backups/restic

# Backup source paths (REQUIRED)
# Colon-separated list of directories to backup
# These will be mounted as read-only in the container
# Examples:
#   BACKUP_PATHS=/mnt/raid1:/mnt/m2:/home/user/documents
#   BACKUP_PATHS=/data:/var/lib/docker/volumes
BACKUP_PATHS=/mnt/raid1:/mnt/m2

# =============================================================================
# OPTIONAL: Advanced Configuration
# =============================================================================

# Timezone for scheduling (default: America/Sao_Paulo)
TZ=America/Sao_Paulo

# Bandwidth limit for uploads (optional)
# Limits upload speed to prevent saturating network
# Examples:
#   BANDWIDTH_LIMIT=--limit-upload 4M
#   BANDWIDTH_LIMIT=--limit-upload 1M
BANDWIDTH_LIMIT=--limit-upload 4M

# File/directory exclusion patterns (optional)
# Space-separated list of patterns to exclude from backup
# Examples:
#   RESTIC_EXCLUDES="*.tmp *.cache /proc /sys /tmp node_modules .git"
#   RESTIC_EXCLUDES="*.log /var/cache /tmp"
RESTIC_EXCLUDES="*.tmp *.cache /proc /sys /tmp node_modules .git __pycache__ *.pyc .DS_Store Thumbs.db"

# Health check configuration (optional)
# Maximum age of last backup before health check fails (in hours)
MAX_BACKUP_AGE_HOURS=192  # 8 days

# Maximum age before repository integrity check is required (in hours)
MAX_CHECK_AGE_HOURS=720   # 30 days

# =============================================================================
# NOTIFICATION: Telegram Bot Configuration (Primary)
# =============================================================================

# Telegram Bot Token (REQUIRED for notifications)
# Get from @BotFather: https://t.me/BotFather
# Example: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz
TELEGRAM_BOT_TOKEN=

# Telegram Chat ID (REQUIRED for notifications)
# Your personal chat ID or group/channel ID
# Get from: https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates
# Examples:
#   Personal chat: 123456789 (positive number)
#   Group: -123456789 (negative number)
#   Channel: @yourchannel or -100123456789
TELEGRAM_CHAT_ID=

# Notification settings
NOTIFY_ON_SUCCESS=true
NOTIFY_ON_FAILURE=true

# =============================================================================
# NOTIFICATION: Webhook Configuration (Fallback/Additional)
# =============================================================================

# Webhook URL for notifications (optional fallback)
# Supports Slack, Discord, Microsoft Teams, etc.
# Examples:
#   WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
#   WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK
WEBHOOK_URL=

# =============================================================================
# RCLONE: Cloud Provider Configuration
# =============================================================================

# These are typically configured through 'rclone config' but can be set here
# for headless operation. Uncomment and configure for your cloud provider.

# Google Drive Configuration (uncomment if using Google Drive)
# RCLONE_CONFIG_GDRIVE_TYPE=drive
# RCLONE_CONFIG_GDRIVE_CLIENT_ID=your-client-id
# RCLONE_CONFIG_GDRIVE_CLIENT_SECRET=your-client-secret
# RCLONE_CONFIG_GDRIVE_TOKEN={"access_token":"xxx","token_type":"Bearer","refresh_token":"xxx","expiry":"xxx"}
# RCLONE_CONFIG_GDRIVE_TEAM_DRIVE=

# OneDrive Configuration (uncomment if using OneDrive)
# RCLONE_CONFIG_ONEDRIVE_TYPE=onedrive
# RCLONE_CONFIG_ONEDRIVE_TOKEN={"access_token":"xxx","token_type":"bearer","refresh_token":"xxx","expiry":"xxx"}
# RCLONE_CONFIG_ONEDRIVE_DRIVE_ID=
# RCLONE_CONFIG_ONEDRIVE_DRIVE_TYPE=personal

# Amazon S3 Configuration (uncomment if using S3)
# RCLONE_CONFIG_S3_TYPE=s3
# RCLONE_CONFIG_S3_PROVIDER=AWS
# RCLONE_CONFIG_S3_ACCESS_KEY_ID=your-access-key
# RCLONE_CONFIG_S3_SECRET_ACCESS_KEY=your-secret-key
# RCLONE_CONFIG_S3_REGION=us-east-1

# =============================================================================
# DOCKER: Container Configuration
# =============================================================================

# Docker compose project name (optional)
COMPOSE_PROJECT_NAME=backup-restic

# Container restart policy (optional)
# Options: no, always, on-failure, unless-stopped
RESTART_POLICY=unless-stopped

# =============================================================================
# SECURITY: Important Notes
# =============================================================================

# 1. Never commit this file with real values to version control
# 2. Set appropriate file permissions: chmod 600 .env
# 3. Consider using Docker secrets for production deployments
# 4. Regularly rotate the RESTIC_PASSWORD (requires creating new repository)
# 5. Test restore procedures regularly
# 6. Keep rclone tokens secure and refresh them before expiry